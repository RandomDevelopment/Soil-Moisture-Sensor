substitutions:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  update_interval: "60s"
  name: "soil-moisture-sensor"

esphome:
  name: ${name}
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: ${ssid}
  password: ${password}
  ap:
    ssid: "_Soil Moisture Sensor Setup"

captive_portal:

logger:
api:
ota:

web_server:
  port: 80

globals:
  - id: current_voltage
    type: float
    restore_value: yes
    initial_value: '0.0'

number:
  - platform: template
    name: "Wet Voltage"
    id: upper_bound
    min_value: 0.0
    max_value: 5
    step: 0.01
    initial_value: 3.0
    unit_of_measurement: "V"
    optimistic: true
    mode: "box"
    restore_value: yes

  - platform: template
    name: "Dry Voltage"
    id: lower_bound
    min_value: 0.0
    max_value: 5
    step: 0.01
    initial_value: 1.0
    unit_of_measurement: "V"
    optimistic: true
    mode: "box"
    restore_value: yes

text_sensor:
  - platform: template
    name: "Current Voltage"
    id: current_voltage_text
    lambda: |-
      return {to_string(id(current_voltage))};

sensor:
  - platform: adc
    pin: A0
    name: "Soil Moisture"
    unit_of_measurement: "%"
    update_interval: ${update_interval}
    filters:
      - lambda: |-
          float voltage = x * 5;
          id(current_voltage) = voltage;
          id(current_voltage_text).publish_state(to_string(voltage));
          float upper = id(upper_bound).state;
          float lower = id(lower_bound).state;
          float moisture = (voltage - lower) / (upper - lower);
          moisture = (moisture > 1.0) ? 1.0 : (moisture < 0.0) ? 0.0 : moisture;
          moisture = (moisture * 100.0);
          return moisture;
    accuracy_decimals: 1
    state_class: measurement
    device_class: moisture
    icon: "mdi:water-percent"
